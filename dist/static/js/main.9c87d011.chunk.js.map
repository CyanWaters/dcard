{"version":3,"sources":["Component/App/styles/index.module.less","Component/InfiniteScroll/InfiniteScroll.jsx","lib/api.js","lib/common.js","Component/App/App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","InfiniteScroll","props","loadMore","component","loading","useState","request","setRequest","handleScroll","scrollTop","document","documentElement","body","scrollHeight","clientHeight","window","innerHeight","Math","ceil","useEffect","addEventListener","removeEventListener","className","SERACH_URL","searchRepoFromGitHub","repoName","count","page","a","URL","axios","get","data","totalCount","repos","total_count","items","debounce","callback","time","timer","clearTimeout","setTimeout","App","setRepoName","setCount","setPage","setLoading","dataSource","setDataSource","Header","Layout","Content","Footer","Sider","onChangeRepoName","useCallback","e","target","value","onChangeCount","onChangePage","disalbeButton","getRepo","cleanDataSource","map","item","index","key","name","url","updated_at","concat","tableComponenet","columns","title","dataIndex","pagination","data-testid","placeholder","onChange","type","min","defaultValue","disabled","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c87d011.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"index_app__X_B8r\",\"header\":\"index_header__221qD\",\"content\":\"index_content__3yk5N\",\"field-name\":\"index_field-name__1sd81\",\"fieldName\":\"index_field-name__1sd81\",\"repo-table\":\"index_repo-table__y7YPr\",\"repoTable\":\"index_repo-table__y7YPr\",\"button-align-center\":\"index_button-align-center__2XR6P\",\"buttonAlignCenter\":\"index_button-align-center__2XR6P\",\"data-loading\":\"index_data-loading__nnBos\",\"dataLoading\":\"index_data-loading__nnBos\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./styles/index.css\";\r\n\r\nexport const InfiniteScroll = (props) => {\r\n  const { loadMore, component, loading } = props;\r\n  const [request, setRequest] = useState(false);\r\n\r\n  const handleScroll = () => {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    const clientHeight =\r\n      document.documentElement.clientHeight || window.innerHeight;\r\n    const scrolledToBottom =\r\n      Math.ceil(scrollTop + clientHeight) >= scrollHeight;\r\n\r\n    if (scrolledToBottom && !request && !loading) {\r\n      // prevent to load multiple times in short period\r\n      setRequest(true);\r\n      loadMore();\r\n      setRequest(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // mount\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    // unmount\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {component}{\" \"}\r\n      {(() => {\r\n        if (true) {\r\n          return <div className=\"data-loading\">Loading..</div>;\r\n        }\r\n      })()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InfiniteScroll;\r\n","import axios from \"axios\";\r\n\r\nconst GITHUB_URL = \"https://api.github.com\";\r\nconst SERACH_URL = `${GITHUB_URL}/search/repositories`;\r\n\r\nexport const searchRepoFromGitHub = async (repoName, count, page) => {\r\n  const URL = `${SERACH_URL}?q=${repoName}&per_page=${count}&page=${page}`;\r\n  try {\r\n    const { data: repos = {} } = await axios.get(URL);\r\n    const totalCount = repos?.total_count || 0;\r\n    const items = repos?.items || [];\r\n    return { items, totalCount };\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n};\r\n","export const debounce = (callback, time) => {\r\n  let timer = null;\r\n  return function () {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = setTimeout(callback, time);\r\n  };\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Input, Layout, Button, Table } from \"antd\";\r\n\r\nimport { InfiniteScroll } from \"../InfiniteScroll\";\r\nimport { searchRepoFromGitHub, debounce } from \"../../lib\";\r\n\r\nimport \"./styles/index.module.less\";\r\n\r\nconst DEFAULT_COUNT = 30;\r\nconst DEFAULT_PAGE = 1;\r\nconst DELAY_INPUT_TIME = 600;\r\n\r\nexport const App = () => {\r\n  const [repoName, setRepoName] = useState(\"\");\r\n  const [count, setCount] = useState(DEFAULT_COUNT);\r\n  const [page, setPage] = useState(DEFAULT_PAGE);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const { Header, Footer, Sider, Content } = Layout;\r\n  // Table Columns\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"URL\",\r\n      dataIndex: \"url\",\r\n      key: \"url\",\r\n    },\r\n    {\r\n      title: \"Latest Updated Time\",\r\n      dataIndex: \"updated_at\",\r\n      key: \"updated_at\",\r\n    },\r\n  ];\r\n\r\n  const onChangeRepoName = useCallback((e) => {\r\n    debounce(() => setRepoName(e?.target?.value), DELAY_INPUT_TIME)();\r\n  }, []);\r\n  const onChangeCount = useCallback((e) => {\r\n    debounce(() => setCount(e?.target?.value), DELAY_INPUT_TIME)();\r\n  }, []);\r\n  const onChangePage = useCallback((e) => {\r\n    debounce(() => setPage(e?.target?.value), DELAY_INPUT_TIME)();\r\n  }, []);\r\n\r\n  const disalbeButton = !(repoName && page && count);\r\n\r\n  const getRepo = async (cleanDataSource = false) => {\r\n    setLoading(true);\r\n    const { items, totalCount } = await searchRepoFromGitHub(\r\n      repoName,\r\n      count,\r\n      page\r\n    );\r\n    const data = items.map((item, index) => {\r\n      const obj = {\r\n        key: index,\r\n        name: item?.name,\r\n        url: item?.url,\r\n        updated_at: item?.updated_at,\r\n      };\r\n      return obj;\r\n    });\r\n    setDataSource(cleanDataSource ? data : dataSource.concat(data));\r\n    setLoading(false);\r\n  };\r\n  const loadMore = useCallback(() => {\r\n    setPage(page + 1);\r\n  }, [page]);\r\n  const tableComponenet = (\r\n    <Table\r\n      className=\"repo-table\"\r\n      dataSource={dataSource}\r\n      columns={columns}\r\n      pagination={false}\r\n    />\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!disalbeButton) {\r\n      getRepo(true);\r\n    }\r\n  }, [repoName]);\r\n  useEffect(() => {\r\n    if (!disalbeButton) {\r\n      getRepo();\r\n    }\r\n  }, [page, count]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Layout>\r\n        <Header className=\"header\">GitHub</Header>\r\n        <Content>\r\n          <div>\r\n            <p className=\"field-name\">Repoitory Name:</p>\r\n            <Input\r\n              data-testid=\"repoName\"\r\n              placeholder=\"Repo Name\"\r\n              onChange={onChangeRepoName}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"field-name\"> Per Page Count:</p>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Count\"\r\n              min={1}\r\n              onChange={onChangeCount}\r\n              defaultValue={count}\r\n            />\r\n          </div>\r\n          <div>\r\n            <p className=\"field-name\"> Page:</p>\r\n            <Input\r\n              type=\"number\"\r\n              placeholder=\"Page\"\r\n              min={1}\r\n              onChange={onChangePage}\r\n              value={page}\r\n              disabled\r\n            />\r\n          </div>\r\n          {/* Search Button */}\r\n          {/* <div className=\"button-align-center\">\r\n            <Button type=\"primary\" disabled={disalbeButton} onClick={getRepo}>\r\n              Search\r\n            </Button>\r\n          </div> */}\r\n          {disalbeButton || !dataSource.length ? (\r\n            loading ? (\r\n              <div className=\"data-loading\">Loading...</div>\r\n            ) : (\r\n              <div className=\"field-name\">None</div>\r\n            )\r\n          ) : (\r\n            <InfiniteScroll\r\n              key={`${count}+${page}+${loading}`}\r\n              loadMore={loadMore}\r\n              component={tableComponenet}\r\n              loading={loading}\r\n            />\r\n          )}\r\n        </Content>\r\n        {/* <Footer>Footer</Footer> */}\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Component/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}